%wh100 {
	width: 100%;
	height: 100%;
}
%mx-auto {
	margin-left: auto;
	margin-right: auto;
}

@mixin min-max($min-width, $max-width, $padding) {
	box-sizing: border-box;
	min-width: $min-width;
	max-width: $max-width;
	padding-right: $padding;
	padding-left: $padding;
	@extend %mx-auto;
}

@mixin respond-to($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (min-width: #{map-get($breakpoints, $breakpoint)}) {
			@content;
		}
	} @else {
		@warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
    + 'Please make sure it is defined in `$breakpoints` map.';
	}
}

@mixin rows-count($n, $lh) {
	overflow: hidden;
	text-overflow: ellipsis;
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: $n;
	line-height: $lh;
	max-height: $lh * $n;
}
